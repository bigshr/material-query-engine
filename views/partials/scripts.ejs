<!-- bootstrap  -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

<!-- axios for http calls -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<!-- datatable -->
<script src="https://code.jquery.com/jquery-3.5.1.js"></script>

<!-- fontawesome -->
<script src="https://use.fontawesome.com/releases/v5.15.4/js/all.js" data-auto-replace-svg="nest"></script>

<script type="text/javascript">        
    const tableId = "#materials-table";

    async function getMaterials(id) {
        const apiBaseUrl = "/api/materials";
        const endpoint = `${apiBaseUrl}/${id}`;
        console.log(endpoint);

        const result = await axios.get(endpoint);        
        console.log(result.data);    
        
        return result.data;
    }

    function rows(materials) {
        return materials.map(row).join("\r\n");
    }

    function row(material, index) {
        return `
            <tr>
                <td>${index + 1}</td>
                <td>${linkToDetailView(material.id)}</td>
                <td>${material.prettyFormula}</td>
                <td>${material.spacegroup.symprec}</td>
                <td>${material.spacegroup.source}</td>
                <td>${material.spacegroup.symbol}</td>
                <td>${material.spacegroup.number}</td>
                <td>${material.spacegroup.pointGroup}</td>
                <td>${material.spacegroup.crystalSystem}</td>
                <td>${material.spacegroup.hall}</td>
                <td>${material.tags.join(", ")}</td>
                <td>${material.density}</td>
            </tr>
        `;
    }

    function linkToDetailView(id) {
        return `
            <a class="link-primary" href="/material/${id}">
                ${id}
            </a>
        `;
    }

    function spinner() {
        return `
            <tr>
                <td colspan="12">
                    <div class="d-flex justify-content-center">
                        <p class="d-inline spinner fs-1">
                            Loading data <i class="fas fa-cog fa-spin"></i>
                        </p>
                    </div>
                </td>
            <tr>
        `;
    }

    function clearSearchInput() {
        $('#search-input').val("");
    }

    function getSearchInput() {
        return $("#search-input").val().trim();
    }

    function addTableContent(content) {
        $(`${tableId} tbody`).html(content);
    }

    async function search() {        
        try {            
            const searchId = getSearchInput();

            if(!searchId) {
                return;
            }
            
            addTableContent(spinner());
            const materials = await getMaterials(searchId);  
            
            setDownloadDetails(materials, `${searchId}.json`);   
            addTableContent(rows(materials));
        } catch (err) {            
            addTableContent(`<p>${err}</p>`);            
            console.error(err);
        }

        clearSearchInput();
    }

    function bindSearchEvents() {
        $('#search-input').keyup(function(e){
            if(e.keyCode == 13)
            {
                search();                
            }
        });
    }

    function downloadJSON() {
        if(!downloadData || downloadData.length == 0) {
            return;
        }

        const json = JSON.stringify(downloadData);
        const blob = new Blob(
            [json],
            {type: "text/json; charset=utf-8"}
        );         
        const link = document.createElement("a");
        const blobUrl = URL.createObjectURL(blob);

        
        link.href = blobUrl;
        link.download = downloadFileName;

        document.body.appendChild(link);

        link.dispatchEvent(
            new MouseEvent('click', { 
                bubbles: true, 
                cancelable: true, 
                view: window 
            })
        );
        
        document.body.removeChild(link);
    }

    function setDownloadDetails(materials, filename) {
        $(document).ready(() => {
            downloadData = materials;
            downloadFileName = filename;
        });
    }

    $(document).ready(async () => {
        bindSearchEvents();
    })
    
</script>

<!-- sails -->
<script src="/dependencies/sails.io.js"></script> 

<noscript>Your browser needs to support JavaScript for this app to function properly.</noscript>